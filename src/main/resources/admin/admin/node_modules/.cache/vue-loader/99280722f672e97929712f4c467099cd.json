{"remainingRequest":"C:\\Users\\20458\\Desktop\\毕设1\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\20458\\Desktop\\毕设1\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\20458\\Desktop\\毕设1\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\20458\\Desktop\\毕设1\\admin\\src\\views\\modules\\yonghu\\add-or-update.vue?vue&type=template&id=d336c394&scoped=true&","dependencies":[{"path":"C:\\Users\\20458\\Desktop\\毕设1\\admin\\src\\views\\modules\\yonghu\\add-or-update.vue","mtime":1676200989007},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}