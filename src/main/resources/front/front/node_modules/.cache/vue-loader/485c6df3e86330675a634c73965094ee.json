{"remainingRequest":"C:\\Users\\20458\\Desktop\\毕设1\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\20458\\Desktop\\毕设1\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\20458\\Desktop\\毕设1\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\20458\\Desktop\\毕设1\\front\\src\\pages\\dianyingleixing\\list.vue?vue&type=template&id=6a4d8552&scoped=true&","dependencies":[{"path":"C:\\Users\\20458\\Desktop\\毕设1\\front\\src\\pages\\dianyingleixing\\list.vue","mtime":1675948350000},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20458\\Desktop\\毕设1\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}